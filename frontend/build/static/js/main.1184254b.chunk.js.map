{"version":3,"sources":["components/Footer/Footer.jsx","redux/constants/userConstants.js","redux/actions/userActions.js","components/Search/Search.jsx","components/Header/Header.jsx","components/screens/LandingPage/LandingPage.jsx","components/MainScreen.jsx","redux/constants/notesConstants.js","redux/actions/notesActions.js","components/ErrorMessage.jsx","components/screens/Notes/PreviewNote.jsx","components/screens/Notes/Notes.jsx","components/screens/Dashboard/Dashboard.jsx","components/screens/LoginScreen/LoginScreen.jsx","components/screens/RegisterScreen/RegisterScreen.jsx","components/screens/CreateNote/CreateNote.jsx","components/screens/Notes/SingleNote.jsx","App.js","reportWebVitals.js","redux/reducers/notesReducer.js","redux/reducers/themeReducer.js","redux/store.js","redux/reducers/userReducers.js","index.js"],"names":["Footer","className","Container","Row","Col","url","target","fgColor","style","height","width","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","logout","removeItem","register","name","pic","Search","setSearch","Form","Group","controlId","Control","placeholder","borderRadius","onChange","e","value","Header","history","useDispatch","userInfo","useSelector","state","userLogin","Navbar","variant","bg","expand","collapseOnSelect","Brand","to","Toggle","Collapse","id","Nav","Link","onClick","LandingPage","useEffect","getItem","push","Button","size","MainScreen","title","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","notesDeleteAction","getState","Authorization","token","delete","ErrorMessage","text","Alert","fontSize","PreviewNote","props","Modal","centered","closeButton","Title","content","Body","category","onHide","Notes","search","useState","modalShow","setModalShow","activeModalContent","setActiveModalContent","notesList","loading","notes","error","successCreate","createNote","success","successUpdate","noteUpdate","noteDelete","errorDelete","successDelete","useHistory","get","console","log","marginLeft","marginBottom","Spinner","animation","role","slice","reverse","filter","filteredNote","toLowerCase","includes","map","note","index","arr","Accordion","Card","margin","display","flex","color","textDecoration","alignSelf","cursor","as","Text","eventKey","length","show","_id","window","confirm","Badge","updatedAt","substring","Dashboard","location","setName","setEmail","setPic","setPassword","confirmPassword","setConfirmPassword","picMessage","setPicMessage","updateUser","md","onSubmit","user","preventDefault","Label","File","pics","FormData","append","fetch","method","body","then","res","json","toString","catch","err","postDetails","files","custom","forEach","alignItems","justifyContent","src","alt","LoginScreen","handleSubmit","flexDirection","disabled","RegisterScreen","setMessage","userRegister","CreateNote","setTitle","setContent","setCategory","resetHandler","CardGroup","minHeight","paylaod","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","fetching","params","put","updateNoteAction","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","theme","deleteUser","parse","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1184254b.chunk.js","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { SocialIcon } from 'react-social-icons';\nconst Footer = () => {\n  return (\n    <footer className='bg-light'>\n      <Container>\n        <Row>\n          {/* <Col className='text-center py-3 text-dark'>\n            Copyright &copy; AideMemoire\n          </Col>\n          <Col className='text-center py-3 '>\n            <h3>\n              <i className='fab fa-linkedin'></i>\n            </h3>\n\n          </Col> */}\n          <Col className='ms-auto text-center py-4  '>\n            <span className='fw-bold'>Copyright &copy; aideMemoire</span>\n          </Col>\n          <Col className='ms-auto '>\n            <div className='text-center py-3'>\n              <span className='fst-italic fw-bold'>Connect with me :</span>\n              <SocialIcon\n                url='https://www.linkedin.com/in/anubhavksr/'\n                className='mx-2 customHover'\n                target='_blank'\n                fgColor='#fff'\n                style={{ height: 35, width: 35 }}\n              />\n              <SocialIcon\n                url='https://github.com/anubhavcu'\n                className='mx-2 customHover'\n                target='_blank'\n                fgColor='#fff'\n                style={{ height: 35, width: 35 }}\n              />\n              <SocialIcon\n                url='https://twitter.com/anubhav_sr'\n                className='mx-2 customHover'\n                target='_blank'\n                fgColor='#fff'\n                style={{ height: 35, width: 35 }}\n              />\n              <SocialIcon\n                url='mailto:anubhavcs.py@gmail.com'\n                className='mx-2 customHover'\n                target='_blank'\n                fgColor='#fff'\n                style={{ height: 35, width: 35 }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n} from '../constants/userConstants';\nimport axios from 'axios';\n\n// user login action\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n    const { data } = await axios.post(\n      '/api/users/login',\n      {\n        email: email,\n        password: password,\n      },\n      config\n    );\n\n    // if successful\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// user logout action\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\n// user register action\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const data = await axios.post(\n      '/api/users/register',\n      { name, pic, email, password },\n      config\n    );\n\n    // console.log(data.data);\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    // ** while registering the user , the userInfo is inside of data.data\n    // ** so when user registers, we weren't able to dispatch login action with correct token.\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data.data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.message\n          ? error.response.message\n          : error.message,\n    });\n  }\n};\n\n// update user\nexport const userUpdateAction = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/users/profile`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.message\n          ? error.response.message\n          : error.message,\n    });\n  }\n};\n\nexport const userDeleteAction = (id) => async (dispatch, getState) => {\n  try {\n    console.log('from actions - ', id);\n    dispatch({ type: USER_DELETE_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (err) {\n    const message =\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n","import { Container, Form } from 'react-bootstrap';\n\nconst Search = ({ setSearch }) => {\n  return (\n    <Container>\n      <Form>\n        {/* <Form.Group className='my-3' controlId='formBasicEmail'> */}\n        <Form.Group\n          className='mx-5 my-2'\n          style={{ width: '75%' }}\n          controlId='formBasicEmail'\n        >\n          <Form.Control\n            type='text'\n            // size='sm'\n            placeholder='Search '\n            style={{ borderRadius: '25px' }}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n\n          {/* <Form.Text className='text-muted'>Search as you type...</Form.Text> */}\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Search;\n","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/actions/userActions';\nimport Search from '../Search/Search';\nconst Header = ({ history, setSearch }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n\n    // history.push('/'); // ! error\n    // we have used a Link tag to route the user to home page on \"logout\"\n    // link tag is wrapper over <a> element which takes history from context and calls .push() method with to=\"/\" prop\n    // refer below link to see react-router's history API vs react-router Link\n    // https://ostrowski.ninja/why-i-dont-use-react-router-link-component/\n  };\n  return (\n    <header>\n      <Navbar variant='dark' bg='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <Navbar.Brand className='customHover'>\n            <Link to='/'>Aide memoire</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n          <Navbar.Collapse id='responsive-navbar-nav'>\n            {userInfo && <Search setSearch={setSearch} />}\n            {userInfo ? (\n              <Nav className='ms-auto me-3' style={{ width: '50%' }}>\n                <Nav.Link className='customHover'>\n                  <Link to='/notes'>\n                    <i className='fas fa-book-open'></i> My Notes\n                  </Link>\n                </Nav.Link>\n                <Nav.Link className='customHover'>\n                  <Link to='/dashboard'>\n                    <i className='fas fa-user'></i> Dashboard\n                  </Link>\n                </Nav.Link>\n                <Nav.Link className='customHover'>\n                  <Link to='' onClick={logoutHandler}>\n                    <i className='fas fa-sign-out-alt'></i> Log out\n                  </Link>\n                </Nav.Link>\n              </Nav>\n            ) : (\n              <Nav className='ms-auto me-3 '>\n                <Nav.Link className='customHover'>\n                  <Link to='/login'>\n                    <i className='fas fa-sign-in-alt'></i> Log In\n                  </Link>\n                </Nav.Link>\n              </Nav>\n            )}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n\n// Bootstrap class update: ml-auto => ms-auto\n// mr-auto => me-auto\n// ! old one's still working with buttons though\n// refer link : https://stackoverflow.com/a/18672475\n","import { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './LandingPage.css';\n\nconst LandingPage = ({ history }) => {\n  // https://reactrouter.com/web/api/Hooks/usehistory\n\n  // const history = useHistory();\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      // console.log(history);\n      history.push('/notes');\n    }\n  }, [history]);\n\n  return (\n    <div className='landingBackground'>\n      <Container>\n        <Row>\n          <Col>\n            <div className='intro-text'>\n              <h1 className='title'>Welcome to Notes App! </h1>\n              <p className='subtitle'>One safe place for all your notes..</p>\n            </div>\n          </Col>\n          <Row>\n            <Col>\n              <div className='intro-buttons'>\n                <div className='customHover'>\n                  <Link to='/login'>\n                    <Button className='me-4' variant='primary ' size='lg'>\n                      Login\n                    </Button>{' '}\n                  </Link>\n                </div>\n                <div className='customHover'>\n                  <Link to='/register'>\n                    <Button className='ms-4 ' variant='secondary' size='lg'>\n                      Sign Up\n                    </Button>{' '}\n                  </Link>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import { Container, Row, Col } from 'react-bootstrap';\nimport './MainScreen.css';\nimport { useDispatch } from 'react-redux';\n\nconst MainScreen = ({ title, children }) => {\n  // const dispatch = useDispatch();\n\n  // const handleChange = () => {\n  //   const value = document.getElementById('flexSwitchCheckChecked').checked;\n  //   console.log(value);\n  //   dispatch({ type: 'THEME_SWITCHED', payload: value });\n  // };\n\n  return (\n    <div className='main-background'>\n      <Container>\n        <Col>\n          {/* <div\n            className='form-check form-switch my-2 '\n            style={{ position: 'absolute', right: '20vw' }}\n          >\n            <input\n              className='form-check-input'\n              type='checkbox'\n              id='flexSwitchCheckChecked'\n              // onChangeCapture={(e) => handleChange(e.target.value)}\n              onChange={handleChange}\n            />\n            <label className='form-check-label' for='flexSwitchCheckChecked'>\n              Dark Theme\n            </label>\n          </div> */}\n          <Row>\n            <div className='page'>\n              {title && (\n                <>\n                  <h2 className='heading'>{title}</h2>\n                  <hr />\n                </>\n              )}\n\n              {children}\n            </div>\n          </Row>\n        </Col>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = 'NOTE_LIST_REQUEST';\nexport const NOTES_LIST_SUCCESS = 'NOTE_LIST_SUCCESS';\nexport const NOTES_LIST_FAIL = 'NOTE_LIST_FAIL';\n\nexport const NOTES_CREATE_REQUEST = 'NOTE_CREATE_REQUEST';\nexport const NOTES_CREATE_SUCCESS = 'NOTE_CREATE_SUCCESS';\nexport const NOTES_CREATE_FAIL = 'NOTE_CREATE_FAIL';\n\nexport const NOTES_UPDATE_REQUEST = 'NOTE_UPDATE_REQUEST';\nexport const NOTES_UPDATE_SUCCESS = 'NOTE_UPDATE_SUCCESS';\nexport const NOTES_UPDATE_FAIL = 'NOTE_UPDATE_FAIL';\n\nexport const NOTES_DELETE_REQUEST = 'NOTE_DELETE_REQUEST';\nexport const NOTES_DELETE_SUCCESS = 'NOTE_DELETE_SUCCESS';\nexport const NOTES_DELETE_FAIL = 'NOTE_DELETE_FAIL';\n","import axios from 'axios';\nimport {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from '../constants/notesConstants';\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: NOTES_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/notes', config);\n\n    dispatch({ type: NOTES_LIST_SUCCESS, payload: data });\n  } catch (err) {\n    const message =\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message;\n    dispatch({ type: NOTES_LIST_FAIL, payload: message });\n  }\n};\n\nexport const createNoteAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: NOTES_CREATE_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        '/api/notes/create',\n        { title, content, category },\n        config\n      );\n      dispatch({ type: NOTES_CREATE_SUCCESS, paylaod: data });\n    } catch (err) {\n      const message =\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message;\n      dispatch({ type: NOTES_CREATE_FAIL, payload: message });\n    }\n  };\n\nexport const updateNoteAction =\n  (id, title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: NOTES_UPDATE_REQUEST });\n      // console.log('from action ', id);\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/notes/${id}`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({ type: NOTES_UPDATE_SUCCESS, payload: data });\n    } catch (err) {\n      const message =\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message;\n      dispatch({ type: NOTES_UPDATE_FAIL, payload: message });\n    }\n  };\n\nexport const notesDeleteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: NOTES_DELETE_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({ type: NOTES_DELETE_SUCCESS, payload: data });\n  } catch (err) {\n    const message =\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message;\n    dispatch({ type: NOTES_DELETE_FAIL, payload: message });\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst ErrorMessage = ({ variant = 'info', text }) => {\n  // const [visible, setVisible] = useState(false);\n  // const componentWillUnmount = useRef(false);\n  // useEffect(() => {\n  //   setVisible(true);\n  //   window.setTimeout(() => {\n  //     setVisible(false);\n  //   }, 2000);\n  //   return () => {\n  //     componentWillUnmount.current = true;\n  //   };\n  // }, []);\n  return (\n    <div>\n      <Alert\n        variant={variant}\n        style={{ fontSize: 20 }}\n        // show={visible}\n      >\n        <strong>{text}</strong>\n      </Alert>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\n\nfunction PreviewNote(props) {\n  return (\n    <Modal\n      {...props}\n      size='lg'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>\n          {props.content.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4> {props.content.category}</h4>\n        <ReactMarkdown>{props.content.content}</ReactMarkdown>\n        {/* <p>{props.content.content}</p> */}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\nexport default PreviewNote;\n","import { Accordion, Badge, Button, Card, Spinner } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport MainScreen from '../../MainScreen';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  listNotes,\n  notesDeleteAction,\n} from '../../../redux/actions/notesActions';\nimport ErrorMessage from '../../ErrorMessage';\nimport PreviewNote from './PreviewNote';\nimport ReactMarkdown from 'react-markdown';\n\nconst Notes = ({ search }) => {\n  // state for modal\n  const [modalShow, setModalShow] = useState(false);\n  const [activeModalContent, setActiveModalContent] = useState('');\n\n  const dispatch = useDispatch();\n  const notesList = useSelector((state) => state.notesList);\n\n  const { loading, notes, error } = notesList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // fetching createNote and noteUpdate states and check if something's changed, if so\n  // notes page will re-render(useEffect's dependency list) , so as to show any latest changes/additions\n  const createNote = useSelector((state) => state.createNote);\n  const { success: successCreate } = createNote;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!userInfo) {\n      console.log(history);\n      history.push('/');\n    } else {\n      dispatch(listNotes());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successCreate,\n    successUpdate,\n    successDelete,\n  ]);\n\n  const handleDelete = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(notesDeleteAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome ${userInfo && userInfo.name}.`}>\n      <Link to='/createnote'>\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size='lg'>\n          <i className='fas fa-plus'></i> Add Note\n        </Button>\n      </Link>\n      {/* {successUpdate && (\n        <ErrorMessage\n          variant='success'\n          text={'Note Updated Successfully!'}\n        ></ErrorMessage>\n      )}\n      {successCreate && (\n        <ErrorMessage\n          variant='success'\n          text='Note Created Successfully'\n        ></ErrorMessage>\n      )}\n      {successDelete && (\n        <ErrorMessage\n          variant='success'\n          text='Note Deleted Successfully'\n        ></ErrorMessage>\n      )}\n      */}\n      {errorDelete && (\n        <ErrorMessage variant='danger' text={error}></ErrorMessage>\n      )}\n      {error && <ErrorMessage variant='danger' text={error}></ErrorMessage>}\n      {loading && (\n        <div className=' d-flex justify-content-center align-items-center'>\n          <Spinner animation='border' role='status'>\n            <span className='visually-hidden'>Loading...</span>\n          </Spinner>\n        </div>\n      )}\n      {/* slice.reverse is basically to show latest note first  */}\n      {notes &&\n        notes\n          .slice(0)\n          .reverse()\n          .filter(\n            (filteredNote) =>\n              filteredNote.title.toLowerCase().includes(search.toLowerCase()) ||\n              filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .map((note, index, arr) => (\n            <Accordion key={note._id}>\n              <Card style={{ margin: 10 }}>\n                <Card.Header style={{ display: 'flex' }}>\n                  <span\n                    style={{\n                      flex: 1,\n                      color: 'black',\n                      textDecoration: 'none',\n                      alignSelf: 'center',\n                      fontSize: 20,\n                      cursor: 'pointer',\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      eventKey='0'\n                      variant='link'\n                    >\n                      {/* <i className='fas fa-arrow-circle-right ms-2'></i>{' '} */}\n                      <strong>{arr.length - index}. </strong> {note.title}\n                    </Accordion.Toggle>\n                  </span>\n                  <div>\n                    <Button\n                      variant='success'\n                      className='mx-2'\n                      onClick={() => {\n                        setActiveModalContent(note);\n                        setModalShow(true);\n                      }}\n                    >\n                      <i className='fas fa-eye'></i> Preview\n                    </Button>\n\n                    <PreviewNote\n                      show={modalShow}\n                      onHide={() => setModalShow(false)}\n                      content={activeModalContent}\n                    />\n\n                    <Link to={`/notes/${note._id}`}>\n                      <Button>\n                        <i className='fas fa-pen'></i>\n                        {'  '} Edit\n                      </Button>\n                    </Link>\n                    <Button\n                      variant='danger'\n                      className='mx-2'\n                      onClick={() => handleDelete(note._id)}\n                    >\n                      <i className='fas fa-trash-alt'></i>\n                      {'   '} Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey='0'>\n                  <Card.Body>\n                    <h4>\n                      {/* <Badge variant='success'>Category -{note.category}</Badge> */}\n                      <Badge className='badge bg-success'>\n                        {/* <span className='badge bg-info'> */}\n                        Category -{note.category}\n                        {/* </span> */}\n                      </Badge>\n                    </h4>\n                    <blockquote className='blockquote mb-0'>\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\n                      <footer className='blockquote-footer'>\n                        {/* Date created: {note.createdAt.substring(0, 10)} || */}\n                        Last modified: {note.updatedAt.substring(0, 10)}\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n};\n\nexport default Notes;\n\n// for flex : 1  - https://developer.mozilla.org/en-US/docs/Web/CSS/flex\n\n// ! Badge now showing inside of Card, used Button instead.\n// * Clicking on category button should filter out notes of same category -- add this feature later\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Container,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport MainScreen from '../../MainScreen';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  logout,\n  userDeleteAction,\n  userUpdateAction,\n} from '../../../redux/actions/userActions';\nimport ErrorMessage from '../../ErrorMessage';\nimport { USER_UPDATE_FAIL } from '../../../redux/constants/userConstants';\nimport { notesDeleteAction } from '../../../redux/actions/notesActions';\n\nconst Dashboard = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const updateUser = useSelector((state) => state.updateUser);\n  let { loading, error, success } = updateUser;\n\n  // for deleting all notes of user when he deletes his profile\n  const notesList = useSelector((state) => state.notesList);\n  const { notes } = notesList;\n  console.log(notes);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  // for generating an image url via cloudinary\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'aide-memoire');\n      data.append('cloud_name', 'anubhavcu');\n      fetch('https://api.cloudinary.com/v1_1/anubhav/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage('Please Select an Image');\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      dispatch(userUpdateAction({ name, email, password, pic }));\n    } else {\n      // window.alert('Passwords do not match !');\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:\n          \"passwords don't match, either leave the password blank or enter same values in password/confirm password\",\n      });\n    }\n  };\n\n  //delete account\n  const handleDelete = () => {\n    if (\n      window.confirm('Are you sure ? You will not be able to undo this action.')\n    ) {\n      console.log(userInfo._id);\n      dispatch(userDeleteAction(userInfo._id));\n      notes.forEach((note) => dispatch(notesDeleteAction(note._id))); // delete all notes of the user\n      dispatch(logout()); // for cleaning up local storage\n      history.push('/');\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <Link to='/notes'>\n          <Button className='  m-2' variant='primary'>\n            Go back\n          </Button>\n        </Link>\n      </div>\n      <MainScreen title='EDIT PROFILE'>\n        <div>\n          <Row>\n            <Col md={6}>\n              <Form onSubmit={submitHandler}>\n                {success && (\n                  <ErrorMessage\n                    variant='success'\n                    text='Updated Successfully'\n                  ></ErrorMessage>\n                )}\n                {error && (\n                  <ErrorMessage variant='danger' text={error}>\n                    {}\n                  </ErrorMessage>\n                )}\n                <Form.Group controlId='name' className='mb-3'>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email' className='mb-3'>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type='email'\n                    placeholder='Enter Email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password' className='mb-3'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Enter Password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirmPassword' className='mb-3'>\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Confirm Password'\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>{' '}\n                {picMessage && (\n                  <ErrorMessage variant='danger'>{picMessage}</ErrorMessage>\n                )}\n                <Form.Group controlId='pic' className='mb-3'>\n                  <Form.Label>Change Profile Picture</Form.Label>\n                  <Form.File\n                    onChange={(e) => postDetails(e.target.files[0])}\n                    id='custom-file'\n                    type='image/png'\n                    custom\n                  />\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                  Update\n                </Button>\n                <Button\n                  className='mx-2'\n                  variant='danger'\n                  className='mx-2'\n                  onClick={handleDelete}\n                >\n                  Delete Account\n                </Button>\n              </Form>\n            </Col>\n            <Col\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <img\n                src={pic}\n                alt={name}\n                className='profilePic'\n                style={{\n                  borderRadius: '250px',\n                  width: '60%',\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </MainScreen>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import MainScreen from '../../MainScreen';\nimport { Form, Button, Row, Col, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../../redux/actions/userActions';\nimport ErrorMessage from '../../ErrorMessage';\n\nconst LoginScreen = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    // const userData = localStorage.getItem('userInfo');\n    if (userInfo) {\n      history.push('/notes');\n    }\n  }, [history, userInfo]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n  return (\n    <div>\n      <MainScreen title='LOGIN' children='hello world'>\n        <div\n          style={{ display: 'flex', flexDirection: 'column', margin: '20px' }}\n        >\n          {error && <ErrorMessage variant='danger' text={error}></ErrorMessage>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Form.Text className='text-muted'>\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n\n            {!loading && (\n              <Button variant='primary' type='submit'>\n                Submit\n              </Button>\n            )}\n            {loading && (\n              <Button variant='primary' disabled>\n                <Spinner\n                  as='span'\n                  animation='border'\n                  size='sm'\n                  role='status'\n                  // variant='success'\n                  aria-hidden='true'\n                />\n                Logging in...\n              </Button>\n            )}\n          </Form>\n          <Row className='py-3'>\n            <Col>\n              Don't have an account ? Register{' '}\n              <Link to='/register' style={{ color: 'blue' }}>\n                here\n              </Link>\n            </Col>\n          </Row>\n        </div>\n      </MainScreen>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import MainScreen from '../../MainScreen';\nimport { Form, Row, Col, Button, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ErrorMessage from '../../ErrorMessage';\nimport { register } from '../../../redux/actions/userActions';\n\nconst RegisterScreen = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n  const [pic, setPic] = useState(\n    'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\n  );\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/notes');\n    }\n  }, [history, userInfo]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('passwords do not match!');\n    } else {\n      dispatch(register(name, email, password, pic));\n    }\n  };\n\n  // for generating pic link by uploading to cloudinary -- see docs for reference\n  // https://api.cloudinary.com/v1_1/anubhav/image/upload\n  const postDetails = (pics) => {\n    if (!pics) {\n      return setPicMessage('Please Select an Image');\n    }\n    setPicMessage(null);\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'aide-memoire');\n      data.append('cloud_name', 'anubhav');\n      fetch('https://api.cloudinary.com/v1_1/anubhav/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data);\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage('Please select an Image');\n    }\n  };\n\n  return (\n    <div>\n      <MainScreen title='REGISTER'>\n        <div\n          style={{ display: 'flex', flexDirection: 'column', margin: '20px' }}\n        >\n          {error && <ErrorMessage variant='danger' text={error}></ErrorMessage>}\n          {message && (\n            <ErrorMessage variant='danger' text={message}></ErrorMessage>\n          )}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId='name' className='mb-3'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='formBasicEmail' className='mb-3'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='formBasicPassword' className='mb-3'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword' className='mb-3'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm Password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </Form.Group>\n            {picMessage && (\n              <ErrorMessage variant='danger' text={picMessage}>\n                {' '}\n              </ErrorMessage>\n            )}\n            <Form.Group controlId='formFile' className='mb-3'>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.File\n                id='custom-file'\n                type='image/png'\n                // label='Upload Profile Picture'\n                onChange={(e) => postDetails(e.target.files[0])}\n                custom\n              />\n            </Form.Group>\n\n            {!loading && (\n              <Button variant='primary' type='submit'>\n                Register\n              </Button>\n            )}\n            {loading && (\n              <Button variant='primary' disabled>\n                <Spinner\n                  as='span'\n                  animation='border'\n                  size='sm'\n                  role='status'\n                  // variant='success'\n                  aria-hidden='true'\n                />\n                Setting up your account ..\n              </Button>\n            )}\n          </Form>\n          <Row className='py-3'>\n            <Col>\n              Have an Account ?{' '}\n              <Link to='/login' style={{ color: 'blue' }}>\n                Login\n              </Link>\n            </Col>\n          </Row>\n        </div>\n      </MainScreen>\n    </div>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from 'react';\nimport MainScreen from '../../MainScreen';\nimport {\n  Button,\n  Card,\n  CardGroup,\n  Container,\n  Form,\n  Spinner,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createNoteAction } from '../../../redux/actions/notesActions';\nimport ErrorMessage from '../../ErrorMessage';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nconst CreateNote = ({ history }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [category, setCategory] = useState('');\n\n  const dispatch = useDispatch();\n\n  const createNote = useSelector((state) => state.createNote);\n  const { loading, error, note } = createNote;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  //   console.log(' note ', note);\n\n  const resetHandler = () => {\n    setTitle('');\n    setCategory('');\n    setContent('');\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push('/notes');\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      console.log(history);\n      history.push('/');\n    }\n  }, []);\n\n  return (\n    <Container>\n      <h3>Create a new note</h3>\n      <div className='ms-auto me-3'>\n        <Link to='/notes'>\n          <Button className='  m-2' variant='primary'>\n            Go back\n          </Button>\n        </Link>\n      </div>\n\n      <CardGroup style={{ minHeight: '80vh' }}>\n        {/* <MainScreen title='Create a Note'></MainScreen> */}\n        <Card>\n          <Card.Header>Create a new Note</Card.Header>\n\n          <Card.Body>\n            <Form onSubmit={submitHandler}>\n              {error && (\n                <ErrorMessage variant='danger' text={error}></ErrorMessage>\n              )}\n              <Form.Group controlId='title' className='mb-3'>\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  type='title'\n                  value={title}\n                  placeholder='Enter the title'\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='content' className='mb-3'>\n                <Form.Label>Content</Form.Label>\n                <Form.Control\n                  as='textarea'\n                  value={content}\n                  placeholder='Enter the content. Tip: you can write markdown too!'\n                  rows={20}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='content' className='mb-3'>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type='content'\n                  value={category}\n                  placeholder='Enter the Category'\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Form.Group>\n              {!loading && (\n                <Button variant='primary' type='submit' size='lg'>\n                  Submit\n                </Button>\n              )}\n              {loading && (\n                <Button variant='primary' size='lg' disabled>\n                  <Spinner\n                    as='span'\n                    animation='border'\n                    size='sm'\n                    role='status'\n                    aria-hidden='true'\n                  />\n                  Creating note...\n                </Button>\n              )}\n\n              <Button\n                className='mx-2'\n                onClick={resetHandler}\n                variant='danger'\n                size='lg'\n              >\n                Reset Feilds\n              </Button>\n            </Form>\n          </Card.Body>\n\n          <Card.Footer className='text-muted'>\n            Creating on - {new Date().toLocaleDateString()}\n          </Card.Footer>\n        </Card>\n        <Card>\n          {/* {content && (\n            <Card>\n              <Card.Header>Note Preview</Card.Header>\n              <Card.Body>\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </Card.Body>\n            </Card>\n          )} */}\n          <Card>\n            <Card.Header>Note Preview</Card.Header>\n            {content && (\n              <Card.Body>\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </Card.Body>\n            )}\n          </Card>\n        </Card>\n      </CardGroup>\n    </Container>\n  );\n};\n\nexport default CreateNote;\n","import React, { useEffect, useState } from 'react';\nimport MainScreen from '../../MainScreen';\nimport {\n  Button,\n  Card,\n  CardGroup,\n  Container,\n  Form,\n  Spinner,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  notesDeleteAction,\n  updateNoteAction,\n} from '../../../redux/actions/notesActions';\nimport ErrorMessage from '../../ErrorMessage';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst SingleNote = ({ history, match }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const handleDelete = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(notesDeleteAction(id));\n    }\n    history.push('/notes');\n  };\n\n  useEffect(() => {\n    fetching();\n  }, [match.params.id, date]);\n\n  const fetching = async () => {\n    const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n    setTitle(data.title);\n    setContent(data.content);\n    setCategory(data.category);\n    setDate(data.updatedAt);\n  };\n\n  const resetHandler = () => {\n    setTitle('');\n    setCategory('');\n    setContent('');\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    // console.log(title, content, category);\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push('/notes');\n  };\n\n  return (\n    <Container>\n      <h3>Edit note </h3>\n      <div className='ms-auto me-3'>\n        <Link to='/notes'>\n          <Button className='  m-2' variant='primary'>\n            Go back\n          </Button>\n        </Link>\n      </div>\n\n      <CardGroup style={{ minHeight: '80vh' }}>\n        {/* <MainScreen title='Create a Note'></MainScreen> */}\n        <Card>\n          <Card.Header>Start editing your note.. </Card.Header>\n\n          <Card.Body>\n            <Form onSubmit={updateHandler}>\n              {error && (\n                <ErrorMessage variant='danger' text={error}></ErrorMessage>\n              )}\n              {errorDelete && (\n                <ErrorMessage\n                  variant='danger'\n                  text={errorDelete}\n                ></ErrorMessage>\n              )}\n              <Form.Group controlId='title' className='mb-3'>\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  type='title'\n                  value={title}\n                  placeholder='Enter the title'\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='content' className='mb-3'>\n                <Form.Label>Content</Form.Label>\n                <Form.Control\n                  as='textarea'\n                  value={content}\n                  placeholder='Enter the content. Tip: you can write markdown too!'\n                  rows={20}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='content' className='mb-3'>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type='content'\n                  value={category}\n                  placeholder='Enter the Category'\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Form.Group>\n              <Button variant='primary' type='submit' size='lg'>\n                Update Note\n              </Button>\n              <Button\n                className='mx-2'\n                onClick={resetHandler}\n                variant='warning'\n                size='lg'\n              >\n                Reset Feilds\n              </Button>\n\n              <Button\n                className='mx-2'\n                onClick={() => handleDelete(match.params.id)}\n                variant='danger'\n                size='lg'\n              >\n                Delete Note\n              </Button>\n            </Form>\n          </Card.Body>\n\n          <Card.Footer className='text-muted'>\n            Updating on - {date.substring(0, 10)}\n          </Card.Footer>\n        </Card>\n        <Card>\n          {/* {content && (\n            <Card>\n              <Card.Header>Note Preview</Card.Header>\n              <Card.Body>\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </Card.Body>\n            </Card>\n          )} */}\n          <Card>\n            <Card.Header>Note Preview</Card.Header>\n            {content && (\n              <Card.Body>\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </Card.Body>\n            )}\n          </Card>\n        </Card>\n      </CardGroup>\n    </Container>\n  );\n};\n\nexport default SingleNote;\n","import { useState } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './components/screens/LandingPage/LandingPage';\n// import Search from './components/Search/Search';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Notes from './components/screens/Notes/Notes';\nimport Dashboard from './components/screens/Dashboard/Dashboard';\nimport LoginScreen from './components/screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './components/screens/RegisterScreen/RegisterScreen';\nimport CreateNote from './components/screens/CreateNote/CreateNote';\nimport SingleNote from './components/screens/Notes/SingleNote';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  // console.log(search);\n  return (\n    <Router>\n      <div>\n        <Header setSearch={setSearch} />\n        <main>\n          {/* <Search /> */}\n          <Route path='/' component={LandingPage} exact />\n          <Route\n            path='/notes'\n            component={() => <Notes search={search} />}\n            exact\n          />\n          <Route path='/notes/:id' component={SingleNote} />\n          <Route path='/createnote' component={CreateNote} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/dashboard' component={Dashboard} />\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_DELETE_FAIL,\n} from '../constants/notesConstants';\n\nconst initialState = {\n  notes: [],\n  // loading: false,\n  // error: '',\n};\n\n// fetching notes\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\n// creating a note\nexport const createNoteReducer = (\n  // state = { loading: false, error: '', success: null },\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true, error: '', success: false };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true, error: '' };\n    case NOTES_CREATE_FAIL:\n      return {\n        error: action.payload,\n        loading: false,\n        success: false,\n      };\n    default:\n      return state;\n  }\n};\n\n// updating a note\nexport const noteUpdateReducer = (\n  // state = { loading: false, error: '', success: null },\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true, error: '', success: false };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, error: '', success: true };\n\n    case NOTES_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n        success: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true, success: false };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, success: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n","const initialState = 'light'; // true = light\nexport const themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'THEME_SWITCHED':\n      return action.payload === true ? 'dark' : 'light';\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  createNoteReducer,\n  noteDeleteReducer,\n  notesReducer,\n  noteUpdateReducer,\n} from './reducers/notesReducer';\nimport {\n  userDeleteReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\nimport { themeReducer } from './reducers/themeReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  notesList: notesReducer,\n  createNote: createNoteReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  updateUser: userUpdateReducer,\n  theme: themeReducer,\n  deleteUser: userDeleteReducer,\n});\n\n// get user info (if present) from local storage and add it to store's state\n// so that if user doesn't logout and reload the application, state gets user data from localStorage\n// and makes user logged in\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromLocalStorage, loading: false, error: '' },\n  //     userRegister: {\n  //       userInfo: userInfoFromLocalStorage,\n  //       loading: false,\n  //       error: '',\n  //     },\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\n\n// const initialState = {\n//   loading: false,\n//   userInfo: null,\n//   error: '',\n// };\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        // ...state,\n        loading: true,\n      };\n    case USER_LOGIN_SUCCESS:\n      return {\n        // ...state,\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_LOGIN_FAIL:\n      return {\n        // ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGOUT:\n      // return {\n      //   loading: false,\n      //   userInfo: null,\n      //   error: '',\n      // }\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    // ! in case there is some state in userRegister -- will check later if required\n    //     case USER_LOGOUT:\n    //       return { loading: false, userInfo: null, error: '' };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}